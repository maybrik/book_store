version: "3.3"

services:

  store:
    build: ./store
    command: python manage.py runserver
    ports:
      - "8000:8000"
    volumes:
      - ./store/:/usr/src/store/
    depends_on:
      - db_store
    networks:
      - store

  db_store:
    image: postgres:latest
    container_name: dv_store
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'post_db'
    networks:
      - store
    ports:
      - "8001:8000"

  warehouse:
    build: ./warehouse
    command: python manage.py runserver
    ports:
      - "7000:7000"
    depends_on:
      - db_warehouse
    networks:
      - warehouse

  db_warehouse:
    image: postgres:latest
    container_name: db_warehouse
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'post_db'
    networks:
      - warehouse
    ports:
      - "7001:7000"

  web:
    container_name: nginx
    image: nginx
    restart: on-failure
    ports:
      - "8080:80"
    volumes:
      - ./nginx/conf/custom.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - mailhog

  redis:
    image: bitnami/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"

  mailhog:
    image: mailhog/mailhog
    logging:
      driver: 'none'
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'post_db'
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgres
    networks:
      - postgres
    restart: on-failure
    healthcheck:
      test: [ "CMD", "pg_isready", "-U" ]
      interval: 30s
      timeout: 10s
      retries: 5

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
